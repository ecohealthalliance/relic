% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/file_read_version.R
\name{file_read_version}
\alias{file_read_version}
\alias{file_read_versions}
\title{Read in files from git history}
\usage{
file_read_version(path, ref = "HEAD", repo = ".")

file_read_versions(path, from = "HEAD", to = NULL, repo = ".")
}
\arguments{
\item{path}{A path or vector of paths of files and/or folders to extract,
relative to the git directory}

\item{ref}{A git commit SHA, tag, branch or other \href{https://git-scm.com/docs/git-rev-parse.html#_specifying_revisions}{revision string}:
such as "HEAD~1", or a \code{\link[git2r:commit]{git2r::commit()}} object. Defaults to "HEAD".}

\item{repo}{The path to the git repository or a \code{\link[git2r:repository]{git2r::repository()}} object.}

\item{from}{A commit object or revision string. A string of the form
'from...to' may also be passed, in which case the commits between the two
revision strings are used and the \code{to} argument is ignored.}

\item{to}{A commit object or reference}
}
\value{
\itemize{
\item For \code{file_read_version()},  a list containing the file contents of each path, named by the path. Each will be a length-1 character vector, or raw vector for binary files.
\item For \code{file_read_versions()},  a list list of lists, named by the commit SHA.
}
}
\description{
Reads the contents of a file or files from a git repository into memory. If
the file does not exist, or is a directory, NULL will be returned.
}
