% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tar_read_version.R
\name{tar_read_version}
\alias{tar_read_version}
\alias{tar_read_versions}
\alias{tar_read_raw_version}
\alias{tar_read_raw_versions}
\title{Read a target's value from a git repository}
\usage{
tar_read_version(
  name,
  ref = "HEAD",
  branches = NULL,
  extract_files = TRUE,
  repo = ".",
  store = targets::tar_path_store()
)

tar_read_versions(
  name,
  from = "HEAD",
  to = NULL,
  branches = NULL,
  extract_files = TRUE,
  repo = ".",
  store = targets::tar_path_store()
)

tar_read_raw_version(
  name,
  ref = "HEAD",
  branches = NULL,
  extract_files = TRUE,
  repo = ".",
  store = targets::tar_path_store()
)

tar_read_raw_versions(
  name,
  from = "HEAD",
  to = NULL,
  branches = NULL,
  extract_files = TRUE,
  repo = ".",
  store = targets::tar_path_store()
)
}
\arguments{
\item{name}{Name of the target. \code{tar_read_version()} can take a symbol, \code{tar_read_raw_version()} requires a character.}

\item{ref}{A git commit SHA, tag, branch or other \href{https://git-scm.com/docs/git-rev-parse.html#_specifying_revisions}{revision string}:
such as "HEAD~1", or a \code{\link[git2r:commit]{git2r::commit()}} object. Defaults to "HEAD".}

\item{branches}{Integer of indices of the (targets) branches to load if the target is a pattern.}

\item{extract_files}{If TRUE, targets of type "file" will be extracted to a temporary directory and these paths will be returned. If FALSE, the paths as stored in the target will be returned unmodified}

\item{repo}{The path to the git repository or a \code{\link[git2r:repository]{git2r::repository()}} object.}

\item{store}{Path to the targets store within the project. Defaults to the current project's store.}

\item{from}{A commit object or revision string. A string of the form
'from...to' may also be passed, in which case the commits between the two
revision strings are used and the \code{to} argument is ignored. If a list of commits
is passed, these commits are used rather than calculating the commits between.}

\item{to}{A commit object or reference}
}
\value{
The target's return values, loaded files in the git file/‚Å†, or the paths to the custom files and directories if format = "file" was set.
If the target is not found at the commit, NULL is returned.  See \code{\link[=tar_exists_version]{tar_exists_version()}} to check for the presence of a target.
}
\description{
Reads the content of targets from a git repository. Target metadata and
local target files are extracted into a temporary directory before being
read in by \code{tar_read()}. For targets of type "file", the files are also
extracted and the paths to the extracted files are returned.
}
\details{
For cloud targets, the target metadata is read from git history and then
this metadata is used to download the target from the cloud. For this to work,
cloud storage must be set up with versioning. Note that the cloud configuration
will use same bucket/endpoint/credentials set in the \emph{current} environment.
}
