% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dir_ls_version.R
\name{dir_ls_version}
\alias{dir_ls_version}
\alias{dir_ls_versions}
\title{List files and folders in a git repository}
\usage{
dir_ls_version(
  path = ".",
  ref = "HEAD",
  all = FALSE,
  recurse = FALSE,
  type = "any",
  regexp = NULL,
  glob = NULL,
  repo = "."
)

dir_ls_versions(
  path,
  from = "HEAD",
  to = NULL,
  all = FALSE,
  recurse = FALSE,
  type = "any",
  regexp = NULL,
  glob = NULL,
  repo = "."
)
}
\arguments{
\item{path}{A path or vector of paths of files and/or folders to extract,
relative to the git directory}

\item{ref}{A git commit SHA, tag, branch or other \href{https://git-scm.com/docs/git-rev-parse.html#_specifying_revisions}{revision string}:
such as "HEAD~1", or a \code{\link[git2r:commit]{git2r::commit()}} object. Defaults to "HEAD".}

\item{recurse}{If TRUE recurse fully, if a positive number the number of levels to recurse}

\item{type}{One or more of "any", "file", "directory", "symlink", or "submodule"}

\item{regexp}{A regular expression (e.g. ⁠\link{.}csv$⁠) passed on to grep() to filter paths.}

\item{glob}{A wildcard aka globbing pattern (e.g. ⁠*.csv⁠) passed on to grep() to filter paths}

\item{repo}{The path to the git repository or a \code{\link[git2r:repository]{git2r::repository()}} object.}

\item{from}{A commit object or revision string. A string of the form
'from...to' may also be passed, in which case the commits between the two
revision strings are used and the \code{to} argument is ignored.}

\item{to}{A commit object or reference}

\item{param}{all If TRUE hidden files are also returned}

\item{invert}{If TRUE, return paths that do not match the pattern or glob}
}
\value{
A character vector of paths
}
\description{
List files and folders in a git repository
}
